{
  "info": {
    "title": "FastAPIAPI",
    "version": "0.1.0",
    "description": "Modern front till fastAPI"
  },
  "basePath": "/",
  "swagger": "2.0",
  "paths": {
    "/tenants": {
      "get": {
        "summary": "Gets all tenants",
        "description": "Retrieves all tenants in the system. There is currently no way of filtering or doing API-side searches.",
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "List of tenants",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tenant"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/tenants/{id}": {
      "get": {
        "summary": "Gets a tenant by id",
        "description": "Retrieves a tenant by its id",
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the tenant with the specified id",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No tenant with the specified id exists"
          }
        }
      }
    },
    "/leasecontracts": {
      "get": {
        "summary": "Gets all contracts for rentals",
        "description": "Retrieves all lease contracts for rentals in the system. Currently the only way of finding a contract for a specific tenant is to retrieve all and filter on the client side. API-side filters will be added later on.",
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "List of contracts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contract"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/leasecontracts/{id}": {
      "get": {
        "summary": "Gets a contract by id",
        "description": "Retrieves a lease contract by its id. Currently the only way of finding a contract for a specific tenant is to retrieve all and filter on the client side. API-side filters will be added later on.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "contract id"
          }
        ],
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "Returns the lease contract with the specified id",
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No contract with the specified id exists"
          }
        }
      }
    },
    "/rentals": {
      "get": {
        "summary": "Gets all rental units",
        "description": "Retrieves all rental units in the system. There is currently no way of filtering or doing API-side searches.",
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "List of rental units",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Rental"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/rentals/{id}": {
      "get": {
        "summary": "Gets a rental unit by id",
        "description": "Retrieves a rental unit by its id",
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "rental id"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the rental unit with the specified id",
            "schema": {
              "$ref": "#/definitions/Rental"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No rental unit with the specified id exists"
          }
        }
      }
    },
    "/auth/generate-password-hash": {
      "get": {
        "summary": "Generates a salt and hashes the given password using that salt.",
        "description": "Generates a salt and hashes the given password using that salt. Pass cleartext password as query parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string",
            "description": "The cleartext password that should be hashed"
          }
        ],
        "responses": {
          "200": {
            "description": "Hashed password and salt",
            "schema": {
              "type": "object",
              "properties": {
                "passwordHash": {
                  "type": "string"
                },
                "salt": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/generate-token": {
      "post": {
        "summary": "Generates a jwt",
        "description": "Validates username + password and returns a valid token to be used in authorization header.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A valid token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "get": {
        "summary": "Renews a jwt token",
        "description": "Validates username + password and returns a valid token to be used in authorization header.",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "A valid token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/test": {
      "post": {
        "summary": "Verifies a authorization token.",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },
        "responses": {
          "200": {
            "description": "Result of the validation.",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "Tenant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "socialSecurityNumber": {
          "type": "string"
        },
        "changedBy": {
          "type": "string"
        },
        "changeDate": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "className": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "fullName",
        "className"
      ],
      "additionalProperties": false
    },
    "Address": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "box": {
          "type": "string"
        },
        "co": {
          "type": "string"
        },
        "attention": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "required": [
        "street",
        "box",
        "co",
        "attention"
      ],
      "additionalProperties": false
    },
    "PhoneNumber": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "number"
      ],
      "additionalProperties": false
    },
    "EmailAddress": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "address"
      ],
      "additionalProperties": false
    },
    "Contact": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAddress"
          }
        }
      },
      "required": [
        "type",
        "firstName",
        "lastName",
        "fullName"
      ],
      "additionalProperties": false
    },
    "Rental": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "changedBy": {
          "type": "string"
        },
        "changeDate": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "areas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Area"
          }
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        }
      },
      "required": [
        "type",
        "id",
        "changedBy",
        "changeDate",
        "createdBy",
        "createDate",
        "documents",
        "areas",
        "name",
        "fullName",
        "description",
        "addresses"
      ],
      "additionalProperties": false
    },
    "Area": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "measuredBy": {
          "type": "string"
        },
        "measuredDate": {
          "type": "string"
        },
        "measuredType": {
          "type": "string"
        },
        "derivedFrom": {
          "type": "string"
        },
        "perimeter": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "size",
        "status",
        "measuredBy",
        "measuredDate",
        "measuredType",
        "derivedFrom",
        "perimeter"
      ],
      "additionalProperties": false
    },
    "Document": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "description",
        "link"
      ],
      "additionalProperties": false
    },
    "Contract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "currentEndDate": {
          "type": "string"
        },
        "changedBy": {
          "type": "string"
        },
        "changeDate": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endingDate": {
          "type": "string"
        },
        "initialDate": {
          "type": "string"
        },
        "noticedBy": {
          "type": "string"
        },
        "noticeStatus": {
          "type": "string"
        },
        "noticeDate": {
          "type": "string"
        },
        "noticeTime": {
          "type": "number"
        },
        "renewalDate": {
          "type": "string"
        },
        "signDate": {
          "type": "string"
        },
        "terminatedDate": {
          "type": "string"
        },
        "terminationReason": {
          "type": "string"
        },
        "partners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractPartner"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractDocument"
          }
        },
        "rentalObject": {
          "$ref": "#/definitions/ContractRentalObject"
        }
      },
      "required": [
        "id",
        "currentEndDate",
        "changedBy",
        "changeDate",
        "className",
        "createdBy",
        "createDate",
        "date",
        "description",
        "endingDate",
        "initialDate",
        "noticedBy",
        "noticeStatus",
        "noticeDate",
        "noticeTime",
        "renewalDate",
        "signDate",
        "terminatedDate",
        "terminationReason",
        "partners",
        "documents",
        "rentalObject"
      ],
      "additionalProperties": false
    },
    "ContractPartner": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "className",
        "roleName"
      ],
      "additionalProperties": false
    },
    "ContractDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "description",
        "link"
      ],
      "additionalProperties": false
    },
    "ContractRentalObject": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RentalType"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "id"
      ],
      "additionalProperties": false
    },
    "RentalType": {
      "type": "string",
      "enum": [
        "Rental",
        "Unknown"
      ]
    }
  },
  "responses": {},
  "parameters": {},
  "securityDefinitions": {},
  "tags": []
}